From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Fri, 23 Aug 2024 01:03:30 +0900
Subject: [PATCH] Moving into another region


diff --git a/src/main/java/io/multipaper/shreddedpaper/region/RegionPos.java b/src/main/java/io/multipaper/shreddedpaper/region/RegionPos.java
index c8caf9240e1aa5e434a47cbdf4b7bf68e4025586..c5fc229de6f086a0fe66d05380b612d2468d6079 100644
--- a/src/main/java/io/multipaper/shreddedpaper/region/RegionPos.java
+++ b/src/main/java/io/multipaper/shreddedpaper/region/RegionPos.java
@@ -16,6 +16,7 @@ public class RegionPos {
     public static final int REGION_SIZE; // eg 8 (for an 8x8 region)
     public static final int REGION_SHIFT; // eg 3 (1 << 3 == 8)
     public static final int REGION_SIZE_MASK; // eg 7 (9 % 8 == 9 & 7 == 1)
+    public static final int MAX_DISTANCE_SQR;
 
     static {
         // desiredRegionSize = 7 -> shift = 3, size = 8, mask = 7
@@ -43,6 +44,8 @@ public class RegionPos {
         }
 
         LOGGER.info("Using region size: {}, shift={}, mask={}", REGION_SIZE, REGION_SHIFT, REGION_SIZE_MASK);
+
+        MAX_DISTANCE_SQR = RegionPos.REGION_SIZE * 16 * RegionPos.REGION_SIZE * 16;
     }
 
     public final int x;
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 6b2c2e2f782630a3b7e25532260cc61e02c8049f..cd3e9bb2af31d0105885d8bda1ab580233144b95 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -1176,7 +1176,9 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public void move(MoverType movementType, Vec3 movement) {
         final Vec3 originalMovement = movement; // Paper - Expose pre-collision velocity
         // Paper start - detailed watchdog information
-        io.papermc.paper.util.TickThread.ensureTickThread("Cannot move an entity off-main");
+        io.papermc.paper.util.TickThread.ensureTickThread(this, "Cannot move an entity off-main"); // ShreddedPaper - check source
+        BlockPos newPos = new BlockPos((int) (this.getX() + movement.x), (int) (this.getY() + movement.y), (int) (this.getZ() + movement.z)); // ShreddedPaper - check destination
+        io.papermc.paper.util.TickThread.ensureTickThread((ServerLevel) this.level, newPos, "Trying to move %s from %s to %s!!! movement=%s getDeltaMovement=%s".formatted(this, this.blockPosition(), newPos, movement, this.getDeltaMovement())); // ShreddedPaper - check destination
         synchronized (this.posLock) {
             this.moveStartX = this.getX();
             this.moveStartY = this.getY();
@@ -2271,7 +2273,13 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             }
             delta = event.getKnockback();
         }
-        this.setDeltaMovement(this.getDeltaMovement().add(delta.getX(), delta.getY(), delta.getZ()));
+        // ShreddedPaper start - limit push velocity
+        Vec3 newDelta = this.getDeltaMovement().add(delta.getX(), delta.getY(), delta.getZ());
+        if (newDelta.lengthSqr() > RegionPos.MAX_DISTANCE_SQR) {
+            newDelta = newDelta.normalize().scale(RegionPos.REGION_SIZE * 16);
+        }
+        this.setDeltaMovement(newDelta);
+        // ShreddedPaper end - limit push velocity
         // Paper end - Add EntityKnockbackByEntityEvent and EntityPushedByEntityAttackEvent
         this.hasImpulse = true;
     }
@@ -4780,6 +4788,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     }
 
     public void setDeltaMovement(Vec3 velocity) {
+        // ShreddedPaper start - why is something setting the entity velocity to larger than one region...
+        if (velocity.horizontalDistanceSqr() > RegionPos.MAX_DISTANCE_SQR + 1 && velocity.horizontalDistanceSqr() > this.deltaMovement.horizontalDistanceSqr()) {
+            LOGGER.warn("Velocity is being set larger than the ShreddedPaper region size: {} for entity {}", velocity, this, new Exception("Velocity larger than region size"));
+        }
+        // ShreddedPaper end - why is something setting the entity velocity to larger than one region...
         synchronized (this.posLock) { // Paper
         this.deltaMovement = velocity;
         } // Paper
diff --git a/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java b/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
index fca3786d0a3f99a3e61e7a4b2251361276eff9d7..74f0577397c8665c9bea3f79775dc26c15543e62 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/EyeOfEnder.java
@@ -1,5 +1,6 @@
 package net.minecraft.world.entity.projectile;
 
+import io.multipaper.shreddedpaper.region.RegionPos;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
@@ -137,6 +138,8 @@ public class EyeOfEnder extends Entity implements ItemSupplier {
 
             int i = this.getY() < this.ty ? 1 : -1;
 
+            if (d6 > RegionPos.MAX_DISTANCE_SQR) d6 = RegionPos.MAX_DISTANCE_SQR; // ShreddedPaper - keep within a region
+
             vec3d = new Vec3(Math.cos((double) f1) * d6, d7 + ((double) i - d7) * 0.014999999664723873D, Math.sin((double) f1) * d6);
             this.setDeltaMovement(vec3d);
         }
